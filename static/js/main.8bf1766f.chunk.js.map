{"version":3,"sources":["assets/images/burger-logo.png","hoc/auxillary/auxillary.component.jsx","components/logo/logo.component.jsx","components/navigation/navigation-items/navigation-item/navigation-item.component.jsx","components/navigation/navigation-items/navigation-items.component.jsx","components/navigation/side-drawer/drawer-toggle/drawer-toggle.component.jsx","components/navigation/toolbar/toolbar.component.jsx","components/ui/backdrop/backdrop.component.jsx","components/navigation/side-drawer/side-drawer.component.jsx","hoc/layout/layout.component.jsx","components/burger/burger-ingredient/burger-ingredient.component.jsx","components/burger/burger.component.jsx","components/burger/build-controls/build-control/build-control.component.jsx","components/burger/build-controls/build-controls.component.jsx","components/ui/modal/modal.component.jsx","components/ui/button/button.component.jsx","components/order-summary/order-summary.component.jsx","components/ui/spinner/spinner.component.jsx","hoc/withErrorHandler/withErrorHandler.jsx","axios-orders.js","store/actions/auth.actions.js","store/actions/actionsTypes.js","containers/burger-builder/burger-builder.component.jsx","store/actions/burgerBuilder.action.js","store/actions/order.action.js","components/ui/input/input.component.jsx","containers/checkout/contact-data/contact-data.component.jsx","components/order/checkout-summary/checkout-summary.component.jsx","containers/checkout/checkout.component.jsx","components/order/order.component.jsx","components/order/orders/orders.component.jsx","containers/auth/auth.component.jsx","containers/auth/logout/logout.component.jsx","App.js","serviceWorker.js","store/reducers/utility.js","store/reducers/burgerBuilder.reducer.js","store/reducers/order.reducer.js","store/reducers/auth.reducer.js","index.js"],"names":["module","exports","Aux","props","children","Logo","className","src","BurgerLogo","alt","NavigationItem","to","link","activeClassName","exact","NavigationItems","isAuth","DrawerToggle","onClick","clicked","Toolbar","drowerToggleClicked","Backdrop","show","SideDrawer","open","closed","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","isAuthenticated","drawerToggleClicked","React","Component","connect","auth","token","BurgerIngredients","type","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","label","removed","disabled","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","console","log","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","Spinner","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","burger","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","Input","inputElement","isFormValid","invalid","shouldValidate","touched","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","orderData","onOrderData","inputChangedHandler","inputId","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","isEmail","test","isNumeric","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","CheckoutSummary","width","margin","CheckoutCancelled","CheckoutContinue","Checkout","checkoutCancelledHandler","goBack","checkoutContinueHandler","replace","summary","purchasedRidirect","purchased","Fragment","match","component","Order","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","Orders","onFetchOrders","orders","queryParams","fetchOrders","err","action","Auth","password","isSignUp","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","building","authRedirectPath","errorMessage","authRedirect","authdata","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredients","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersSuccess","fetchBurgerStart","fetchBurgerFail","authStart","authFail","authLogout","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bf1766f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const Aux = props => props.children;\n\nexport default Aux;\n","import React from \"react\";\n\nimport BurgerLogo from \"../../assets/images/burger-logo.png\";\n\nimport \"./logo.styles.scss\";\n\nconst Logo = props => (\n  <div className=\"logo\">\n    <img src={BurgerLogo} alt=\"MyBurger\"></img>\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./navigation-item.styles.scss\";\n\nconst NavigationItem = props => (\n  <li className=\"navigation-item\">\n    <NavLink to={props.link} activeClassName=\"active\" exact={props.exact}>\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default NavigationItem;\n","import React from \"react\";\n\nimport NavigationItem from \"./navigation-item/navigation-item.component\";\n\nimport \"./navigation-items.styles.scss\";\n\nconst NavigationItems = props => (\n  <nav>\n    <ul className=\"navigation-items\">\n      <NavigationItem link=\"/\" exact>\n        Burger Builder\n      </NavigationItem>\n      {props.isAuth ? (\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n      ) : null}\n      {!props.isAuth ? (\n        <NavigationItem link=\"/auth\">Authentication</NavigationItem>\n      ) : (\n        <NavigationItem link=\"/logout\">Logout</NavigationItem>\n      )}\n    </ul>\n  </nav>\n);\n\nexport default NavigationItems;\n","import React from \"react\";\n\nimport \"./drawer-toggle.styles.scss\";\n\nconst DrawerToggle = props => (\n  <div onClick={props.clicked} className=\"drawer-toggle\">\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default DrawerToggle;\n","import React from \"react\";\n\nimport Logo from \"../../logo/logo.component\";\nimport NavigationItems from \"../navigation-items/navigation-items.component\";\nimport DrawerToggle from \"../side-drawer/drawer-toggle/drawer-toggle.component\";\n\nimport \"./toolbar.styles.scss\";\n\nconst Toolbar = props => (\n  <header className=\"toolbar\">\n    <DrawerToggle clicked={props.drowerToggleClicked} />\n    <Logo />\n    <NavigationItems isAuth={props.isAuth} />\n  </header>\n);\n\nexport default Toolbar;\n","import React from \"react\";\n\nimport \"./backdrop.styles.scss\";\n\nconst Backdrop = props =>\n  props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null;\n\nexport default Backdrop;\n","import React from \"react\";\n\nimport Logo from \"../../logo/logo.component\";\nimport NavigationItems from \"../../navigation/navigation-items/navigation-items.component\";\nimport Backrop from \"../../ui/backdrop/backdrop.component\";\nimport Aux from \"../../../hoc/auxillary/auxillary.component\";\n\nimport \"./side-drawer.styles.scss\";\n\nconst SideDrawer = props => {\n  return (\n    <Aux>\n      <Backrop show={props.open} clicked={props.closed} />\n      <div className={`side-drawer  ${props.open ? \"open\" : \"close\"}`}>\n        <Logo />\n        <NavigationItems isAuth={props.isAuth} />\n      </div>\n    </Aux>\n  );\n};\n\nexport default SideDrawer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Aux from \"../auxillary/auxillary.component\";\nimport Toolbar from \"../../components/navigation/toolbar/toolbar.component\";\nimport SideDrawer from \"../../components/navigation/side-drawer/side-drawer.component\";\n\nimport \"./layout.styles.scss\";\n\nclass Layout extends React.Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerClosedHandler = () => {\n    this.setState({ showSideDrawer: false });\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return { showSideDrawer: !prevState.showSideDrawer };\n    });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Toolbar\n          isAuth={this.props.isAuthenticated}\n          drawerToggleClicked={this.sideDrawerToggleHandler}\n        />\n        <SideDrawer\n          isAuth={this.props.isAuthenticated}\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n        />\n        <main className=\"content\">{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./burger-ingredients.styles.scss\";\n\nconst BurgerIngredients = props => {\n  switch (props.type) {\n    case \"bread-bottom\":\n      return <div className=\"bread-bottom\"></div>;\n    case \"bread-top\":\n      return (\n        <div className=\"bread-top\">\n          <div className=\"seeds1\"></div>\n          <div className=\"seeds2\"></div>\n        </div>\n      );\n    case \"meat\":\n      return <div className=\"meat\"></div>;\n    case \"cheese\":\n      return <div className=\"cheese\"></div>;\n    case \"salad\":\n      return <div className=\"salad\"></div>;\n    case \"bacon\":\n      return <div className=\"bacon\"></div>;\n    default:\n      return null;\n  }\n};\n\nBurgerIngredients.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredients;\n","import React from \"react\";\n\nimport BurgerIngredient from \"./burger-ingredient/burger-ingredient.component\";\n\nimport \"./burger.styles.scss\";\n\nconst Burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients :)</p>;\n  }\n  return (\n    <div className=\"burger\">\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default Burger;\n","import React from \"react\";\n\nimport \"./build-control.styles.scss\";\n\nconst BuildControl = props => (\n  <div className=\"build-control\">\n    <div className=\"label\">{props.label}</div>\n    <button className=\"less\" onClick={props.removed} disabled={props.disabled}>\n      Less\n    </button>\n    <button className=\"more\" onClick={props.added}>\n      More\n    </button>\n  </div>\n);\n\nexport default BuildControl;\n","import React from \"react\";\n\nimport BuildControl from \"./build-control/build-control.component\";\n\nimport \"./build-controls.styles.scss\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" }\n];\n\nconst BuildControls = props => (\n  <div className=\"build-controls\">\n    <p>\n      Current Price <strong>${props.price.toFixed(2)}</strong>\n    </p>\n    {controls.map(ctrl => (\n      <BuildControl\n        key={ctrl.label}\n        label={ctrl.label}\n        added={() => props.ingredientAdded(ctrl.type)}\n        removed={() => props.ingredientRemoved(ctrl.type)}\n        disabled={props.disabled[ctrl.type]}\n      />\n    ))}\n    <button\n      className=\"order-button\"\n      disabled={!props.purchasable}\n      onClick={props.ordered}\n    >\n      {props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}\n    </button>\n  </div>\n);\n\nexport default BuildControls;\n","import React from \"react\";\n\nimport Aux from \"../../../hoc/auxillary/auxillary.component\";\nimport Backdrop from \"../../ui/backdrop/backdrop.component\";\n\nimport \"./modal.styless.scss\";\n\nclass Modal extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n\n  render() {\n    return (\n      <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className=\"modal\"\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\"\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\n\nimport \"./button.styles.scss\";\n\nconst Button = props => (\n  <button\n    className={`button ${props.btnType}`}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\n\nimport Button from \"../ui/button/button.component\";\n\nimport Aux from \"../../hoc/auxillary/auxillary.component\";\n\nclass OrderSummary extends React.Component {\n  // This could be a functional component, doesn't have to be a class\n  componentWillUpdate() {\n    console.log(\"[OrderSummary] WillUpdate\");\n  }\n\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\n      return (\n        <li key={igKey}>\n          <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\n          {this.props.ingredients[igKey]}\n        </li>\n      );\n    });\n\n    return (\n      <Aux>\n        <h3>Your Order</h3>\n        <p>A delicious burger with the following ingredients:</p>\n        <ul>{ingredientSummary}</ul>\n        <p>\n          <strong>Total Price: {this.props.price.toFixed(2)}</strong>\n        </p>\n        <p>Continue to Checkout?</p>\n        <Button btnType=\"danger\" clicked={this.props.purchaseCancelled}>\n          CANCEL\n        </Button>\n        <Button btnType=\"success\" clicked={this.props.purchaseContinued}>\n          CONTINUE\n        </Button>\n      </Aux>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import React from \"react\";\n\nimport \"./spinner.styles.scss\";\n\nconst Spinner = props => <div className=\"loader\">Loading...</div>;\n\nexport default Spinner;\n","import React from \"react\";\n\nimport Modal from \"../../components/ui/modal/modal.component\";\nimport Aux from \"../auxillary/auxillary.component\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends React.Component {\n    state = {\n      error: null\n    };\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          this.setState({ error: error });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <Aux>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\nexport default withErrorHandler;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://burger-builder-c0867.firebaseio.com/\"\n});\n\nexport default instance;\n","import axios from \"axios\";\n\nimport * as actionTypes from \"./actionsTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authdata = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBehqhTmu4xQRtp8V-rG1h6Cj4Ov8Fvgrg\";\n    if (!isSignUp) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBehqhTmu4xQRtp8V-rG1h6Cj4Ov8Fvgrg\";\n    }\n    axios\n      .post(url, authdata)\n      .then(response => {\n        console.log(response);\n        const expirationDate = new Date(\n          new Date().getTime() + response.data.expiresIn * 1000\n        );\n        localStorage.setItem(\"token\", response.data.idToken);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", response.data.localId);\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\n        dispatch(checkAuthTimeout(response.data.expiresIn));\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(authFail(err.response.data.error));\n      });\n  };\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\n\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\n\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Aux from \"../../hoc/auxillary/auxillary.component\";\nimport Burger from \"../../components/burger/burger.component\";\nimport BuildControls from \"../../components/burger/build-controls/build-controls.component\";\nimport Modal from \"../../components/ui/modal/modal.component\";\nimport OrderSummary from \"../../components/order-summary/order-summary.component\";\nimport Spinner from \"../../components/ui/spinner/spinner.component\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport axios from \"../../axios-orders\";\nimport * as actions from \"../../store/actions/index\";\n\nclass BurgerBuilder extends React.Component {\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    return sum > 0;\n  }\n\n  purchaseHandler = () => {\n    if (this.props.isAuth) {\n      this.setState({ purchasing: true });\n    } else {\n      this.props.onSetAuthRedirectPath(\"/checkout\");\n      this.props.history.push(\"/auth\");\n    }\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push(\"/checkout\");\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n    let burger = this.props.error ? (\n      <p>Ingredients can't be loaded!</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            isAuth={this.props.isAuth}\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            purchasable={this.updatePurchaseState(this.props.ings)}\n            ordered={this.purchaseHandler}\n            price={this.props.price}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          price={this.props.price}\n          purchaseCancelled={this.purchaseCancelHandler}\n          purchaseContinued={this.purchaseContinueHandler}\n        />\n      );\n    }\n    // {salad: true, meat: false, ...}\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuth: state.auth.token !== null\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","import * as actionTypes from \"./actionsTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const addIngredient = name => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const removeIngredient = name => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const fetchIngredientsFailed = () => {\n  return {\n    type: actionTypes.FETCH_INGREDIENTS_FAILED\n  };\n};\n\nexport const setIngredients = ingredients => {\n  return {\n    type: actionTypes.SET_INGREDIENTS,\n    ingredients: ingredients\n  };\n};\n\nexport const initIngredients = () => {\n  return dispatch => {\n    axios\n      .get(\"https://burger-builder-c0867.firebaseio.com/ingredients.json\")\n      .then(response => {\n        dispatch(setIngredients(response.data));\n      })\n      .catch(error => {\n        dispatch(fetchIngredientsFailed());\n      });\n  };\n};\n","import * as actionTypes from \"./actionsTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\n\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios\n      .post(\"/orders.json?auth=\" + token, orderData)\n      .then(response => {\n        console.log(response.data);\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n      })\n      .catch(error => {\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\n\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersStart());\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n    axios\n      .get(\"/orders.json\" + queryParams)\n      .then(res => {\n        const fetchOrders = [];\n        for (let key in res.data) {\n          fetchOrders.push({ ...res.data[key], id: key });\n        }\n        dispatch(fetchOrdersSuccess(fetchOrders));\n      })\n      .catch(err => {\n        dispatch(fetchOrdersFail(err));\n      });\n  };\n};\n","import React from \"react\";\n\nimport \"./input.styles.scss\";\n\nconst Input = props => {\n  let inputElement = null;\n\n  const isFormValid = () => {\n    return props.invalid && props.shouldValidate && props.touched\n      ? \"invalid\"\n      : \"\";\n  };\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={`input-element ${isFormValid()}`}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={`input-element ${isFormValid()}`}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={`input-element ${isFormValid()}`}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className=\"input-element\"\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n  }\n\n  return (\n    <div className=\"input\">\n      <label className=\"label\">{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport axios from \"../../../axios-orders\";\nimport { connect } from \"react-redux\";\n\nimport Spinner from \"../../../components/ui/spinner/spinner.component\";\nimport Button from \"../../../components/ui/button/button.component\";\nimport Input from \"../../../components/ui/input/input.component\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport \"./contact-data.styles.scss\";\n\nclass ContactData extends React.Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIP Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 6\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Email\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            {\n              value: \"fastest\",\n              displayValue: \"Fastest\"\n            },\n            {\n              value: \"cheapest\",\n              displayValue: \"Cheapest\"\n            }\n          ]\n        },\n        value: \"fastest\",\n        validation: {},\n        valid: true\n      }\n    },\n    formIsValid: false\n  };\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  orderHandler = event => {\n    event.preventDefault();\n    console.log(this.props);\n    const formData = {};\n    for (let formElementId in this.state.orderForm) {\n      formData[formElementId] = this.state.orderForm[formElementId].value;\n    }\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price.toFixed(2),\n      orderData: formData,\n      userId: this.props.userId\n    };\n\n    this.props.onOrderData(order, this.props.token);\n  };\n\n  inputChangedHandler = (event, inputId) => {\n    const updatedOrderForm = {\n      ...this.state.orderForm\n    };\n    const updatedFormElement = {\n      ...updatedOrderForm[inputId]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.touched = true;\n    updatedOrderForm[inputId] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputId in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputId].valid && formIsValid;\n    }\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            invalid={!formElement.config.valid}\n            shouldValidate={formElement.config.validation}\n            touched={formElement.config.touched}\n            changed={event => this.inputChangedHandler(event, formElement.id)}\n          />\n        ))}\n        <Button btnType=\"success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className=\"contact-data\">\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderData: (orderData, token) =>\n      dispatch(actions.purchaseBurger(orderData, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React from \"react\";\n\nimport Burger from \"../../burger/burger.component\";\nimport Button from \"../../ui/button/button.component\";\n\nimport \"./checkout-summary.styles.scss\";\n\nconst CheckoutSummary = props => {\n  return (\n    <div className=\"checkout-summary\">\n      <h1>We hope it tastes well!</h1>\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Burger ingredients={props.ingredients} />\n        <Button btnType=\"danger\" clicked={props.CheckoutCancelled}>\n          CANCEL\n        </Button>\n        <Button btnType=\"success\" clicked={props.CheckoutContinue}>\n          CONTINUE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport ContactData from \"./contact-data/contact-data.component\";\nimport CheckoutSummary from \"../../components/order/checkout-summary/checkout-summary.component\";\n\nclass Checkout extends React.Component {\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n  checkoutContinueHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n    if (this.props.ings) {\n      const purchasedRidirect = this.props.purchased ? (\n        <Redirect to=\"/\" />\n      ) : null;\n      summary = (\n        <React.Fragment>\n          {purchasedRidirect}\n          <CheckoutSummary\n            ingredients={this.props.ings}\n            CheckoutCancelled={this.checkoutCancelledHandler}\n            CheckoutContinue={this.checkoutContinueHandler}\n          />\n          <Route\n            path={`${this.props.match.path}/contact-data`}\n            component={ContactData}\n          />\n        </React.Fragment>\n      );\n    }\n    return summary;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\n\nimport \"./order.styles.scss\";\n\nconst Order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span\n        key={ig.name}\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        }}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className=\"order\">\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default Order;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Order from \"../order.component\";\nimport axios from \"../../../axios-orders\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\nimport * as action from \"../../../store/actions/index\";\nimport Spinner from \"../../ui/spinner/spinner.component\";\n\nimport \"./orders.styles.scss\";\n\nclass Orders extends React.Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => (\n        <Order\n          key={order.id}\n          ingredients={order.ingredients}\n          price={order.price}\n        />\n      ));\n    }\n    return <div>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(action.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Input from \"../../components/ui/input/input.component\";\nimport Button from \"../../components/ui/button/button.component\";\nimport Spinner from \"../../components/ui/spinner/spinner.component\";\nimport * as actions from \"../../store/actions/index\";\n\nimport \"./auth.styless.scss\";\n\nclass Auth extends React.Component {\n  state = {\n    controls: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Email\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 6\n        },\n        valid: false,\n        touched: false\n      }\n    },\n    isSignUp: true\n  };\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  componentDidMount() {\n    if (!this.props.building && this.props.authRedirectPath) {\n      this.props.onSetAuthRedirectPath();\n    }\n  }\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        valid: this.checkValidity(\n          event.target.value,\n          this.state.controls[controlName].validation\n        ),\n        touched: true\n      }\n    };\n    this.setState({ controls: updatedControls });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.isSignUp\n    );\n  };\n\n  switchAuthModeHandler = () => {\n    this.setState(prevState => {\n      return { isSignUp: !prevState.isSignUp };\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => (\n      <Input\n        key={formElement.id}\n        elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig}\n        value={formElement.config.value}\n        invalid={!formElement.config.valid}\n        shouldValidate={formElement.config.validation}\n        touched={formElement.config.touched}\n        changed={event => this.inputChangedHandler(event, formElement.id)}\n      />\n    ));\n\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error.message}</p>;\n    }\n\n    let authRedirect = null;\n    if (this.props.isAuth) {\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\n    }\n\n    return (\n      <div className=\"auth\">\n        {authRedirect}\n        {errorMessage}\n        <form onSubmit={this.submitHandler}>\n          {form}\n          <Button btnType=\"success\">SUBMIT</Button>\n        </form>\n        <Button btnType=\"danger\" clicked={this.switchAuthModeHandler}>\n          SWITCH TO {this.state.isSignUp ? \"SIGN IN\" : \"SIGN UP\"}\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuth: state.auth.token !== null,\n    building: state.burgerBuilder.building,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    onAuth: (email, password, isSignUp) =>\n      dispatch(actions.auth(email, password, isSignUp)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Auth);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../../store/actions/index\";\n\nclass Logout extends React.Component {\n  componentDidMount() {\n    this.props.onLogout(this.props.history);\n  }\n\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"./hoc/layout/layout.component\";\nimport BurgerBuilder from \"./containers/burger-builder/burger-builder.component\";\nimport Checkout from \"./containers/checkout/checkout.component\";\nimport Orders from \"./components/order/orders/orders.component\";\nimport Auth from \"./containers/auth/auth.component\";\nimport Logout from \"./containers/auth/logout/logout.component\";\nimport * as actions from \"./store/actions/index\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" exact component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.props.isAuth) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          {this.props.isAuth ? (\n            <Route path=\"/orders\" component={Orders} />\n          ) : null}\n          <Route path=\"/logout\" exact component={Logout} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"./utility\";\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredients = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIng = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: 4,\n    error: false,\n    building: false\n  });\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredients(state, action);\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionsTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"./utility\";\n\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nconst purchaseBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nconst fetchBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst fetchBurgerFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionsTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n    case actionsTypes.FETCH_ORDERS_FAIL:\n      return fetchBurgerFail(state, action);\n    case actionsTypes.FETCH_ORDERS_START:\n      return fetchBurgerStart(state, action);\n    case actionsTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n    case actionsTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n    case actionsTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n    case actionsTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n    default:\n      return {\n        ...state\n      };\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"./utility\";\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\"\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder.reducer.js\";\nimport orderReducer from \"./store/reducers/order.reducer\";\nimport authReducer from \"./store/reducers/auth.reducer\";\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/BurgerBuilder\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}