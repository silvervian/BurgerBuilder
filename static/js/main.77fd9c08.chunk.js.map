{"version":3,"sources":["store/actions/actionsTypes.js","hoc/auxillary/auxillary.component.jsx","store/actions/burgerBuilder.action.js","store/actions/order.action.js","store/actions/auth.actions.js","store/actions/index.js","axios-orders.js","components/ui/backdrop/backdrop.component.jsx","components/ui/modal/modal.component.jsx","components/ui/button/button.component.jsx","components/ui/spinner/spinner.component.jsx","hoc/withErrorHandler/withErrorHandler.jsx","hooks/http-error-handler.hook.js","components/burger/burger-ingredient/burger-ingredient.component.jsx","components/burger/burger.component.jsx","assets/images/burger-logo.png","components/logo/logo.component.jsx","components/navigation/navigation-items/navigation-item/navigation-item.component.jsx","components/navigation/navigation-items/navigation-items.component.jsx","components/navigation/side-drawer/drawer-toggle/drawer-toggle.component.jsx","components/navigation/toolbar/toolbar.component.jsx","components/navigation/side-drawer/side-drawer.component.jsx","hoc/layout/layout.component.jsx","components/burger/build-controls/build-control/build-control.component.jsx","components/burger/build-controls/build-controls.component.jsx","components/order-summary/order-summary.component.jsx","containers/burger-builder/burger-builder.component.jsx","containers/auth/logout/logout.component.jsx","App.js","serviceWorker.js","shared/utility.js","store/reducers/burgerBuilder.reducer.js","store/reducers/order.reducer.js","store/reducers/auth.reducer.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","Aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","key","push","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignUp","authdata","returnSecureToken","url","console","log","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","instance","create","baseURL","Backdrop","show","className","onClick","clicked","React","memo","modalClosed","style","transform","opacity","prevProps","nextProps","Button","btnType","disabled","Spinner","withErrorHandler","WrappedComponent","httpClient","useState","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","useEffect","eject","useHttpErrorHandler","clearError","message","BurgerIngredients","Burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","length","module","exports","Logo","src","BurgerLogo","alt","NavigationItem","to","link","activeClassName","exact","NavigationItems","isAuth","DrawerToggle","Toolbar","drowerToggleClicked","SideDrawer","open","closed","connect","state","isAuthenticated","sideDrawerIsVisible","setSideDrawerIsVisible","BuildControl","label","removed","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","purchasing","setPurchasing","useDispatch","ings","useSelector","burgerBuilder","totalPrice","onInitIngredients","useCallback","actions","purchaseCancelHandler","disabledInfo","orderSummary","burger","ingName","sum","history","onLogout","Orders","lazy","Checkout","Auth","withRouter","onTryAutoSignup","routes","Suspense","fallback","component","BurgerBuilder","Logout","Boolean","window","location","hostname","match","updateObject","oldObject","updatedProperties","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredients","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","purchaseBurgerStart","newOrder","fetchOrdersSuccess","fetchBurgerStart","fetchBurgerFail","actionsTypes","authRedirectPath","authStart","authFail","authLogout","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77fd9c08.chunk.js","sourcesContent":["export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\n\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\n\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\n","const Aux = props => props.children;\n\nexport default Aux;\n","import * as actionTypes from \"./actionsTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const addIngredient = name => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const removeIngredient = name => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const fetchIngredientsFailed = () => {\n  return {\n    type: actionTypes.FETCH_INGREDIENTS_FAILED\n  };\n};\n\nexport const setIngredients = ingredients => {\n  return {\n    type: actionTypes.SET_INGREDIENTS,\n    ingredients: ingredients\n  };\n};\n\nexport const initIngredients = () => {\n  return dispatch => {\n    axios\n      .get(\"https://burger-builder-c0867.firebaseio.com/ingredients.json\")\n      .then(response => {\n        dispatch(setIngredients(response.data));\n      })\n      .catch(error => {\n        dispatch(fetchIngredientsFailed());\n      });\n  };\n};\n","import * as actionTypes from \"./actionsTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\n\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios\n      .post(\"/orders.json?auth=\" + token, orderData)\n      .then(response => {\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n      })\n      .catch(error => {\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\n\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersStart());\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n    axios\n      .get(\"/orders.json\" + queryParams)\n      .then(res => {\n        const fetchOrders = [];\n        for (let key in res.data) {\n          fetchOrders.push({ ...res.data[key], id: key });\n        }\n        dispatch(fetchOrdersSuccess(fetchOrders));\n      })\n      .catch(err => {\n        dispatch(fetchOrdersFail(err));\n      });\n  };\n};\n","import axios from \"axios\";\n\nimport * as actionTypes from \"./actionsTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authdata = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBehqhTmu4xQRtp8V-rG1h6Cj4Ov8Fvgrg\";\n    if (!isSignUp) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBehqhTmu4xQRtp8V-rG1h6Cj4Ov8Fvgrg\";\n    }\n    axios\n      .post(url, authdata)\n      .then(response => {\n        console.log(response);\n        const expirationDate = new Date(\n          new Date().getTime() + response.data.expiresIn * 1000\n        );\n        localStorage.setItem(\"token\", response.data.idToken);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", response.data.localId);\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\n        dispatch(checkAuthTimeout(response.data.expiresIn));\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(authFail(err.response.data.error));\n      });\n  };\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export {\n  addIngredient,\n  removeIngredient,\n  initIngredients\n} from \"./burgerBuilder.action\";\nexport { purchaseBurger, purchaseInit, fetchOrders } from \"./order.action\";\nexport {\n  auth,\n  logout,\n  setAuthRedirectPath,\n  authCheckState\n} from \"../actions/auth.actions\";\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://burger-builder-c0867.firebaseio.com/\"\n});\n\nexport default instance;\n","import React from \"react\";\n\nimport \"./backdrop.styles.scss\";\n\nconst Backdrop = props =>\n  props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null;\n\nexport default Backdrop;\n","import React from \"react\";\n\nimport Aux from \"../../../hoc/auxillary/auxillary.component\";\nimport Backdrop from \"../../ui/backdrop/backdrop.component\";\n\nimport \"./modal.styless.scss\";\n\nconst Modal = props => {\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   return (\n  //     nextProps.show !== props.show ||\n  //     nextProps.children !== this.props.children\n  //   );\n  // }\n\n  return (\n    <Aux>\n      <Backdrop show={props.show} clicked={props.modalClosed} />\n      <div\n        className=\"modal\"\n        style={{\n          transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n          opacity: props.show ? \"1\" : \"0\"\n        }}\n      >\n        {props.children}\n      </div>\n    </Aux>\n  );\n};\n\nexport default React.memo(\n  Modal,\n  (prevProps, nextProps) =>\n    nextProps.show === prevProps.show &&\n    nextProps.children === prevProps.children\n);\n","import React from \"react\";\n\nimport \"./button.styles.scss\";\n\nconst Button = props => (\n  <button\n    className={`button ${props.btnType}`}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\n\nimport \"./spinner.styles.scss\";\n\nconst Spinner = props => <div className=\"loader\">Loading...</div>;\n\nexport default Spinner;\n","import React from \"react\";\n\nimport Modal from \"../../components/ui/modal/modal.component\";\nimport Aux from \"../auxillary/auxillary.component\";\nimport useHttpErrorHandler from \"../../hooks/http-error-handler.hook\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return props => {\n    const [error, clearError] = useHttpErrorHandler(axios);\n\n    return (\n      <Aux>\n        <Modal show={error} modalClosed={clearError}>\n          {error && error.message}\n        </Modal>\n        <WrappedComponent {...props} />\n      </Aux>\n    );\n  };\n};\nexport default withErrorHandler;\n","import { useState, useEffect } from \"react\";\n\nexport default httpClient => {\n  const [error, setError] = useState(null);\n\n  const reqInterceptor = httpClient.interceptors.request.use(req => {\n    setError(null);\n    return req;\n  });\n\n  const resInterceptor = httpClient.interceptors.response.use(\n    res => res,\n    err => {\n      setError(err);\n    }\n  );\n\n  useEffect(() => {\n    return () => {\n      httpClient.interceptors.request.eject(reqInterceptor);\n      httpClient.interceptors.response.eject(resInterceptor);\n    };\n  }, [\n    httpClient.interceptors.request,\n    httpClient.interceptors.response,\n    reqInterceptor,\n    resInterceptor\n  ]);\n\n  const errorConfirmedHandler = () => {\n    setError(null);\n  };\n\n  return [error, errorConfirmedHandler];\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./burger-ingredients.styles.scss\";\n\nconst BurgerIngredients = props => {\n  switch (props.type) {\n    case \"bread-bottom\":\n      return <div className=\"bread-bottom\"></div>;\n    case \"bread-top\":\n      return (\n        <div className=\"bread-top\">\n          <div className=\"seeds1\"></div>\n          <div className=\"seeds2\"></div>\n        </div>\n      );\n    case \"meat\":\n      return <div className=\"meat\"></div>;\n    case \"cheese\":\n      return <div className=\"cheese\"></div>;\n    case \"salad\":\n      return <div className=\"salad\"></div>;\n    case \"bacon\":\n      return <div className=\"bacon\"></div>;\n    default:\n      return null;\n  }\n};\n\nBurgerIngredients.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredients;\n","import React from \"react\";\n\nimport BurgerIngredient from \"./burger-ingredient/burger-ingredient.component\";\n\nimport \"./burger.styles.scss\";\n\nconst Burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients :)</p>;\n  }\n  return (\n    <div className=\"burger\">\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default Burger;\n","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from \"react\";\n\nimport BurgerLogo from \"../../assets/images/burger-logo.png\";\n\nimport \"./logo.styles.scss\";\n\nconst Logo = props => (\n  <div className=\"logo\">\n    <img src={BurgerLogo} alt=\"MyBurger\"></img>\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./navigation-item.styles.scss\";\n\nconst NavigationItem = props => (\n  <li className=\"navigation-item\">\n    <NavLink to={props.link} activeClassName=\"active\" exact={props.exact}>\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default NavigationItem;\n","import React from \"react\";\n\nimport NavigationItem from \"./navigation-item/navigation-item.component\";\n\nimport \"./navigation-items.styles.scss\";\n\nconst NavigationItems = props => (\n  <nav>\n    <ul className=\"navigation-items\">\n      <NavigationItem link=\"/\" exact>\n        Burger Builder\n      </NavigationItem>\n      {props.isAuth ? (\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n      ) : null}\n      {!props.isAuth ? (\n        <NavigationItem link=\"/auth\">Authentication</NavigationItem>\n      ) : (\n        <NavigationItem link=\"/logout\">Logout</NavigationItem>\n      )}\n    </ul>\n  </nav>\n);\n\nexport default NavigationItems;\n","import React from \"react\";\n\nimport \"./drawer-toggle.styles.scss\";\n\nconst DrawerToggle = props => (\n  <div onClick={props.clicked} className=\"drawer-toggle\">\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default DrawerToggle;\n","import React from \"react\";\n\nimport Logo from \"../../logo/logo.component\";\nimport NavigationItems from \"../navigation-items/navigation-items.component\";\nimport DrawerToggle from \"../side-drawer/drawer-toggle/drawer-toggle.component\";\n\nimport \"./toolbar.styles.scss\";\n\nconst Toolbar = props => (\n  <header className=\"toolbar\">\n    <DrawerToggle clicked={props.drowerToggleClicked} />\n    <Logo />\n    <nav>\n      <NavigationItems isAuth={props.isAuth} />\n    </nav>\n  </header>\n);\n\nexport default Toolbar;\n","import React from \"react\";\n\nimport Logo from \"../../logo/logo.component\";\nimport NavigationItems from \"../../navigation/navigation-items/navigation-items.component\";\nimport Backrop from \"../../ui/backdrop/backdrop.component\";\nimport Aux from \"../../../hoc/auxillary/auxillary.component\";\n\nimport \"./side-drawer.styles.scss\";\n\nconst SideDrawer = props => {\n  return (\n    <Aux>\n      <Backrop show={props.open} clicked={props.closed} />\n      <div\n        className={`side-drawer ${props.open ? \"open\" : \"close\"}`}\n        onClick={props.closed}\n      >\n        <Logo />\n        <nav>\n          <NavigationItems isAuth={props.isAuth} />\n        </nav>\n      </div>\n    </Aux>\n  );\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Aux from \"../auxillary/auxillary.component\";\nimport Toolbar from \"../../components/navigation/toolbar/toolbar.component\";\nimport SideDrawer from \"../../components/navigation/side-drawer/side-drawer.component\";\n\nimport \"./layout.styles.scss\";\n\nconst Layout = props => {\n  const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false);\n\n  const sideDrawerClosedHandler = () => {\n    setSideDrawerIsVisible(false);\n  };\n\n  const sideDrawerToggleHandler = () => {\n    setSideDrawerIsVisible(!sideDrawerIsVisible);\n  };\n\n  return (\n    <Aux>\n      <Toolbar\n        isAuth={props.isAuthenticated}\n        drowerToggleClicked={sideDrawerToggleHandler}\n      />\n      <SideDrawer\n        isAuth={props.isAuthenticated}\n        open={sideDrawerIsVisible}\n        closed={sideDrawerClosedHandler}\n      />\n      <main className=\"content\">{props.children}</main>\n    </Aux>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import React from \"react\";\n\nimport \"./build-control.styles.scss\";\n\nconst BuildControl = props => (\n  <div className=\"build-control\">\n    <div className=\"label\">{props.label}</div>\n    <button className=\"less\" onClick={props.removed} disabled={props.disabled}>\n      Less\n    </button>\n    <button className=\"more\" onClick={props.added}>\n      More\n    </button>\n  </div>\n);\n\nexport default BuildControl;\n","import React from \"react\";\n\nimport BuildControl from \"./build-control/build-control.component\";\n\nimport \"./build-controls.styles.scss\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" }\n];\n\nconst BuildControls = props => (\n  <div className=\"build-controls\">\n    <p>\n      Current Price <strong>${props.price.toFixed(2)}</strong>\n    </p>\n    {controls.map(ctrl => (\n      <BuildControl\n        key={ctrl.label}\n        label={ctrl.label}\n        added={() => props.ingredientAdded(ctrl.type)}\n        removed={() => props.ingredientRemoved(ctrl.type)}\n        disabled={props.disabled[ctrl.type]}\n      />\n    ))}\n    <button\n      className=\"order-button\"\n      disabled={!props.purchasable}\n      onClick={props.ordered}\n    >\n      {props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}\n    </button>\n  </div>\n);\n\nexport default BuildControls;\n","import React from \"react\";\n\nimport Button from \"../ui/button/button.component\";\n\nimport Aux from \"../../hoc/auxillary/auxillary.component\";\n\nconst OrderSummary = props => {\n  // This could be a functional component, doesn't have to be a class\n\n  const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\n    return (\n      <li key={igKey}>\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\n        {props.ingredients[igKey]}\n      </li>\n    );\n  });\n\n  return (\n    <Aux>\n      <h3>Your Order</h3>\n      <p>A delicious burger with the following ingredients:</p>\n      <ul>{ingredientSummary}</ul>\n      <p>\n        <strong>Total Price: {props.price.toFixed(2)}</strong>\n      </p>\n      <p>Continue to Checkout?</p>\n      <Button btnType=\"danger\" clicked={props.purchaseCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"success\" clicked={props.purchaseContinued}>\n        CONTINUE\n      </Button>\n    </Aux>\n  );\n};\n\nexport default OrderSummary;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Aux from \"../../hoc/auxillary/auxillary.component\";\nimport Burger from \"../../components/burger/burger.component\";\nimport BuildControls from \"../../components/burger/build-controls/build-controls.component\";\nimport Modal from \"../../components/ui/modal/modal.component\";\nimport OrderSummary from \"../../components/order-summary/order-summary.component\";\nimport Spinner from \"../../components/ui/spinner/spinner.component\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport axios from \"../../axios-orders\";\nimport * as actions from \"../../store/actions/index\";\n\nconst BurgerBuilder = props => {\n  const [purchasing, setPurchasing] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const ings = useSelector(state => state.burgerBuilder.ingredients)\n  const price = useSelector(state => state.burgerBuilder.totalPrice)\n  const error = useSelector(state => state.burgerBuilder.error)\n  const isAuth = useSelector(state => state.auth.token !== null)\n\n  const onIngredientAdded = ingName => dispatch(actions.addIngredient(ingName));\n  const onIngredientRemoved = ingName => dispatch(actions.removeIngredient(ingName));\n  const onInitIngredients = useCallback(() => dispatch(actions.initIngredients()), [dispatch]);\n  const onInitPurchase = () => dispatch(actions.purchaseInit());\n  const onSetAuthRedirectPath = path => dispatch(actions.setAuthRedirectPath(path));\n\n  useEffect(() => {\n    onInitIngredients();\n  }, [onInitIngredients]);\n\n  const updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    return sum > 0;\n  };\n\n  const purchaseHandler = () => {\n    if (isAuth) {\n      setPurchasing(true);\n    } else {\n      onSetAuthRedirectPath(\"/checkout\");\n      props.history.push(\"/auth\");\n    }\n  };\n\n  const purchaseCancelHandler = () => {\n    setPurchasing(false);\n  };\n\n  const purchaseContinueHandler = () => {\n    onInitPurchase();\n    props.history.push(\"/checkout\");\n  };\n\n  const disabledInfo = {\n    ...ings\n  };\n  for (let key in disabledInfo) {\n    disabledInfo[key] = disabledInfo[key] <= 0;\n  }\n  let orderSummary = null;\n  let burger = error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n  if (ings) {\n    burger = (\n      <Aux>\n        <Burger ingredients={ings} />\n        <BuildControls\n          isAuth={isAuth}\n          ingredientAdded={onIngredientAdded}\n          ingredientRemoved={onIngredientRemoved}\n          disabled={disabledInfo}\n          purchasable={updatePurchaseState(ings)}\n          ordered={purchaseHandler}\n          price={price}\n        />\n      </Aux>\n    );\n    orderSummary = (\n      <OrderSummary\n        ingredients={ings}\n        price={price}\n        purchaseCancelled={purchaseCancelHandler}\n        purchaseContinued={purchaseContinueHandler}\n      />\n    );\n  }\n  // {salad: true, meat: false, ...}\n  return (\n    <Aux>\n      <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\n        {orderSummary}\n      </Modal>\n      {burger}\n    </Aux>\n  );\n};\n\nexport default (withErrorHandler(BurgerBuilder, axios));\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../../store/actions/index\";\n\nconst Logout = props => {\n  const { onLogout } = props;\n  useEffect(() => {\n    onLogout();\n  }, [onLogout]);\n\n  return <Redirect to=\"/\" />;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { useEffect, Suspense } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"./hoc/layout/layout.component\";\nimport BurgerBuilder from \"./containers/burger-builder/burger-builder.component\";\nimport Logout from \"./containers/auth/logout/logout.component\";\nimport * as actions from \"./store/actions/index\";\n\nconst Orders = React.lazy(() =>\n  import(\"./components/order/orders/orders.component\")\n);\n\nconst Checkout = React.lazy(() =>\n  import(\"./containers/checkout/checkout.component\")\n);\n\nconst Auth = React.lazy(() => import(\"./containers/auth/auth.component\"));\n\nconst App = props => {\n  const { onTryAutoSignup } = props;\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n\n  let routes = (\n    <Switch>\n      <React.Suspense fallback={<div>Loading...</div>}>\n        <Route path=\"/auth\" exact component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </React.Suspense>\n    </Switch>\n  );\n  if (props.isAuth) {\n    routes = (\n      <Switch>\n        <Route path=\"/checkout\" component={Checkout} />\n        {props.isAuth ? <Route path=\"/orders\" component={Orders} /> : null}\n        <Route path=\"/logout\" exact component={Logout} />\n        <Route path=\"/auth\" exact component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>\n      </Layout>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid\n  }\n\n  return isValid;\n}\n","import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredients = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIng = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: 4,\n    error: false,\n    building: false\n  });\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredients(state, action);\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionsTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nconst purchaseBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nconst fetchBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst fetchBurgerFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionsTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n    case actionsTypes.FETCH_ORDERS_FAIL:\n      return fetchBurgerFail(state, action);\n    case actionsTypes.FETCH_ORDERS_START:\n      return fetchBurgerStart(state, action);\n    case actionsTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n    case actionsTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n    case actionsTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n    case actionsTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n    default:\n      return {\n        ...state\n      };\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\"\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder.reducer.js\";\nimport orderReducer from \"./store/reducers/order.reducer\";\nimport authReducer from \"./store/reducers/auth.reducer\";\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/BurgerBuilder\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}