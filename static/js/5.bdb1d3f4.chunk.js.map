{"version":3,"sources":["components/order/order.component.jsx","components/order/orders/orders.component.jsx"],"names":["Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","style","textTransform","display","margin","border","padding","className","Number","parseFloat","price","toFixed","connect","state","orders","order","loading","token","auth","userId","dispatch","onFetchOrders","action","withErrorHandler","useEffect","id","axios"],"mappings":"mMAyCeA,G,MArCD,SAAAC,GACZ,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACvC,OACE,0BACEC,IAAKD,EAAGJ,KACRM,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QAGVP,EAAGJ,KAVN,KAUcI,EAAGH,OAVjB,QAeJ,OACE,yBAAKW,UAAU,SACb,2CAAiBV,GACjB,qCACS,uCAAaW,OAAOC,WAAWlB,EAAMmB,OAAOC,QAAQ,Q,qCCWpDC,uBAhBS,SAAAC,GACtB,MAAO,CACLC,OAAQD,EAAME,MAAMD,OACpBE,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKC,WAII,SAAAC,GACzB,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OACbC,EAASE,IAAmBL,EAAOE,QAI1BP,CAGbW,aAtCa,SAAAhC,GAAU,IACf8B,EAAiC9B,EAAjC8B,cAAeJ,EAAkB1B,EAAlB0B,MAAOE,EAAW5B,EAAX4B,OAC9BK,qBAAU,WACRH,EAAcJ,EAAOE,KACpB,CAACE,EAAeJ,EAAOE,IAE1B,IAAIL,EAAS,kBAAC,IAAD,MAUb,OATKvB,EAAMyB,UACTF,EAASvB,EAAMuB,OAAOhB,KAAI,SAAAiB,GAAK,OAC7B,kBAAC,EAAD,CACEf,IAAKe,EAAMU,GACXjC,YAAauB,EAAMvB,YACnBkB,MAAOK,EAAML,YAIZ,6BAAMI,KAsBYY","file":"static/js/5.bdb1d3f4.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./order.styles.scss\";\n\nconst Order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span\n        key={ig.name}\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        }}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className=\"order\">\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default Order;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Order from \"../order.component\";\nimport axios from \"../../../axios-orders\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\nimport * as action from \"../../../store/actions/index\";\nimport Spinner from \"../../ui/spinner/spinner.component\";\n\nimport \"./orders.styles.scss\";\n\nconst Orders = props => {\n  const { onFetchOrders, token, userId } = props;\n  useEffect(() => {\n    onFetchOrders(token, userId);\n  }, [onFetchOrders, token, userId]);\n\n  let orders = <Spinner />;\n  if (!props.loading) {\n    orders = props.orders.map(order => (\n      <Order\n        key={order.id}\n        ingredients={order.ingredients}\n        price={order.price}\n      />\n    ));\n  }\n  return <div>{orders}</div>;\n};\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(action.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}