{"version":3,"sources":["components/order/order.component.jsx","components/order/orders/orders.component.jsx"],"names":["Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","style","textTransform","display","margin","border","padding","className","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","loading","order","id","React","Component","connect","state","auth","dispatch","action","withErrorHandler","axios"],"mappings":"8LAyCeA,G,MArCD,SAAAC,GACZ,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACvC,OACE,0BACEC,IAAKD,EAAGJ,KACRM,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QAGVP,EAAGJ,KAVN,KAUcI,EAAGH,OAVjB,QAeJ,OACE,yBAAKW,UAAU,SACb,2CAAiBV,GACjB,qCACS,uCAAaW,OAAOC,WAAWlB,EAAMmB,OAAOC,QAAQ,Q,gCCxB7DC,G,kMAEFC,KAAKtB,MAAMuB,cAAcD,KAAKtB,MAAMwB,MAAOF,KAAKtB,MAAMyB,U,+BAItD,IAAIC,EAAS,kBAAC,IAAD,MAUb,OATKJ,KAAKtB,MAAM2B,UACdD,EAASJ,KAAKtB,MAAM0B,OAAOnB,KAAI,SAAAqB,GAAK,OAClC,kBAAC,EAAD,CACEnB,IAAKmB,EAAMC,GACX5B,YAAa2B,EAAM3B,YACnBkB,MAAOS,EAAMT,YAIZ,6BAAMO,O,GAhBII,IAAMC,YAoCZC,uBAhBS,SAAAC,GACtB,MAAO,CACLP,OAAQO,EAAML,MAAMF,OACpBC,QAASM,EAAML,MAAMD,QACrBH,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAII,SAAAU,GACzB,MAAO,CACLZ,cAAe,SAACC,EAAOC,GAAR,OACbU,EAASC,IAAmBZ,EAAOC,QAI1BO,CAGbK,YAAiBhB,EAAQiB,O","file":"static/js/5.f4715dae.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./order.styles.scss\";\n\nconst Order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span\n        key={ig.name}\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        }}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className=\"order\">\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default Order;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Order from \"../order.component\";\nimport axios from \"../../../axios-orders\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\nimport * as action from \"../../../store/actions/index\";\nimport Spinner from \"../../ui/spinner/spinner.component\";\n\nimport \"./orders.styles.scss\";\n\nclass Orders extends React.Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => (\n        <Order\n          key={order.id}\n          ingredients={order.ingredients}\n          price={order.price}\n        />\n      ));\n    }\n    return <div>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(action.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}