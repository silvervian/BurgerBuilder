{"version":3,"sources":["assets/images/burger-logo.png","hoc/auxillary/auxillary.component.jsx","components/logo/logo.component.jsx","components/navigation/navigation-items/navigation-item/navigation-item.component.jsx","components/navigation/navigation-items/navigation-items.component.jsx","components/navigation/side-drawer/drawer-toggle/drawer-toggle.component.jsx","components/navigation/toolbar/toolbar.component.jsx","components/ui/backdrop/backdrop.component.jsx","components/navigation/side-drawer/side-drawer.component.jsx","hoc/layout/layout.component.jsx","components/burger/burger-ingredient/burger-ingredient.component.jsx","components/burger/burger.component.jsx","components/burger/build-controls/build-control/build-control.component.jsx","components/burger/build-controls/build-controls.component.jsx","components/ui/modal/modal.component.jsx","components/ui/button/button.component.jsx","components/order-summary/order-summary.component.jsx","components/ui/spinner/spinner.component.jsx","hoc/withErrorHandler/withErrorHandler.jsx","axios-orders.js","containers/burger-builder/burger-builder.component.jsx","store/actions/burgerBuilder.action.js","store/actions/actionsTypes.js","components/ui/input/input.component.jsx","containers/checkout/contact-data/contact-data.component.jsx","store/actions/order.action.js","components/order/checkout-summary/checkout-summary.component.jsx","containers/checkout/checkout.component.jsx","components/order/order.component.jsx","components/order/orders/orders.component.jsx","App.js","serviceWorker.js","store/reducers/burgerBuilder.reducer.js","index.js"],"names":["module","exports","Aux","props","children","Logo","className","src","BurgerLogo","alt","NavigationItem","to","link","activeClassName","exact","NavigationItems","DrawerToggle","onClick","clicked","Toolbar","drowerToggleClicked","Backdrop","show","SideDrawer","open","closed","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","drawerToggleClicked","this","React","Component","BurgerIngredients","type","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","label","removed","disabled","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","console","log","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","Spinner","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","onInitIngredients","sum","disabledInfo","ings","orderSummary","burger","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","Input","inputElement","isFormValid","invalid","shouldValidate","touched","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","orderData","onOrderBurger","inputChangedHandler","inputId","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","isEmail","test","isNumeric","formElementsArray","id","config","form","onSubmit","formElement","loading","onOrderData","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","CheckoutSummary","width","margin","CheckoutCancelled","CheckoutContinue","Checkout","checkoutCancelledHandler","goBack","checkoutContinueHandler","replace","summary","Fragment","path","match","component","Order","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","orders","fetchOrders","err","App","Orders","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","burgerBuilderReducer","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5c3565a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const Aux = props => props.children;\n\nexport default Aux;\n","import React from \"react\";\n\nimport BurgerLogo from \"../../assets/images/burger-logo.png\";\n\nimport \"./logo.styles.scss\";\n\nconst Logo = props => (\n  <div className=\"logo\">\n    <img src={BurgerLogo} alt=\"MyBurger\"></img>\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./navigation-item.styles.scss\";\n\nconst NavigationItem = props => (\n  <li className=\"navigation-item\">\n    <NavLink to={props.link} activeClassName=\"active\" exact={props.exact}>\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default NavigationItem;\n","import React from \"react\";\n\nimport NavigationItem from \"./navigation-item/navigation-item.component\";\n\nimport \"./navigation-items.styles.scss\";\n\nconst NavigationItems = props => (\n  <nav>\n    <ul className=\"navigation-items\">\n      <NavigationItem link=\"/\" exact>\n        Burger Builder\n      </NavigationItem>\n      <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n  </nav>\n);\n\nexport default NavigationItems;\n","import React from \"react\";\n\nimport \"./drawer-toggle.styles.scss\";\n\nconst DrawerToggle = props => (\n  <div onClick={props.clicked} className=\"drawer-toggle\">\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default DrawerToggle;\n","import React from \"react\";\n\nimport Logo from \"../../logo/logo.component\";\nimport NavigationItems from \"../navigation-items/navigation-items.component\";\nimport DrawerToggle from \"../side-drawer/drawer-toggle/drawer-toggle.component\";\n\nimport \"./toolbar.styles.scss\";\n\nconst Toolbar = props => (\n  <header className=\"toolbar\">\n    <DrawerToggle clicked={props.drowerToggleClicked} />\n    <Logo />\n    <NavigationItems />\n  </header>\n);\n\nexport default Toolbar;\n","import React from \"react\";\n\nimport \"./backdrop.styles.scss\";\n\nconst Backdrop = props =>\n  props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null;\n\nexport default Backdrop;\n","import React from \"react\";\n\nimport Logo from \"../../logo/logo.component\";\nimport NavigationItems from \"../../navigation/navigation-items/navigation-items.component\";\nimport Backrop from \"../../ui/backdrop/backdrop.component\";\nimport Aux from \"../../../hoc/auxillary/auxillary.component\";\n\nimport \"./side-drawer.styles.scss\";\n\nconst SideDrawer = props => {\n  return (\n    <Aux>\n      <Backrop show={props.open} clicked={props.closed} />\n      <div className={`side-drawer  ${props.open ? \"open\" : \"close\"}`}>\n        <Logo />\n        <NavigationItems />\n      </div>\n    </Aux>\n  );\n};\n\nexport default SideDrawer;\n","import React from \"react\";\n\nimport Aux from \"../auxillary/auxillary.component\";\nimport Toolbar from \"../../components/navigation/toolbar/toolbar.component\";\nimport SideDrawer from \"../../components/navigation/side-drawer/side-drawer.component\";\n\nimport \"./layout.styles.scss\";\n\nclass Layout extends React.Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerClosedHandler = () => {\n    this.setState({ showSideDrawer: false });\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return { showSideDrawer: !prevState.showSideDrawer };\n    });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n        <SideDrawer\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n        />\n        <main className=\"content\">{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./burger-ingredients.styles.scss\";\n\nconst BurgerIngredients = props => {\n  switch (props.type) {\n    case \"bread-bottom\":\n      return <div className=\"bread-bottom\"></div>;\n    case \"bread-top\":\n      return (\n        <div className=\"bread-top\">\n          <div className=\"seeds1\"></div>\n          <div className=\"seeds2\"></div>\n        </div>\n      );\n    case \"meat\":\n      return <div className=\"meat\"></div>;\n    case \"cheese\":\n      return <div className=\"cheese\"></div>;\n    case \"salad\":\n      return <div className=\"salad\"></div>;\n    case \"bacon\":\n      return <div className=\"bacon\"></div>;\n    default:\n      return null;\n  }\n};\n\nBurgerIngredients.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredients;\n","import React from \"react\";\n\nimport BurgerIngredient from \"./burger-ingredient/burger-ingredient.component\";\n\nimport \"./burger.styles.scss\";\n\nconst Burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients :)</p>;\n  }\n  return (\n    <div className=\"burger\">\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default Burger;\n","import React from \"react\";\n\nimport \"./build-control.styles.scss\";\n\nconst BuildControl = props => (\n  <div className=\"build-control\">\n    <div className=\"label\">{props.label}</div>\n    <button className=\"less\" onClick={props.removed} disabled={props.disabled}>\n      Less\n    </button>\n    <button className=\"more\" onClick={props.added}>\n      More\n    </button>\n  </div>\n);\n\nexport default BuildControl;\n","import React from \"react\";\n\nimport BuildControl from \"./build-control/build-control.component\";\n\nimport \"./build-controls.styles.scss\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" }\n];\n\nconst BuildControls = props => (\n  <div className=\"build-controls\">\n    <p>\n      Current Price <strong>${props.price.toFixed(2)}</strong>\n    </p>\n    {controls.map(ctrl => (\n      <BuildControl\n        key={ctrl.label}\n        label={ctrl.label}\n        added={() => props.ingredientAdded(ctrl.type)}\n        removed={() => props.ingredientRemoved(ctrl.type)}\n        disabled={props.disabled[ctrl.type]}\n      />\n    ))}\n    <button\n      className=\"order-button\"\n      disabled={!props.purchasable}\n      onClick={props.ordered}\n    >\n      ORDER NOW\n    </button>\n  </div>\n);\n\nexport default BuildControls;\n","import React from \"react\";\n\nimport Aux from \"../../../hoc/auxillary/auxillary.component\";\nimport Backdrop from \"../../ui/backdrop/backdrop.component\";\n\nimport \"./modal.styless.scss\";\n\nclass Modal extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n\n  render() {\n    return (\n      <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className=\"modal\"\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\"\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\n\nimport \"./button.styles.scss\";\n\nconst Button = props => (\n  <button\n    className={`button ${props.btnType}`}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\n\nimport Button from \"../ui/button/button.component\";\n\nimport Aux from \"../../hoc/auxillary/auxillary.component\";\n\nclass OrderSummary extends React.Component {\n  // This could be a functional component, doesn't have to be a class\n  componentWillUpdate() {\n    console.log(\"[OrderSummary] WillUpdate\");\n  }\n\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\n      return (\n        <li key={igKey}>\n          <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\n          {this.props.ingredients[igKey]}\n        </li>\n      );\n    });\n\n    return (\n      <Aux>\n        <h3>Your Order</h3>\n        <p>A delicious burger with the following ingredients:</p>\n        <ul>{ingredientSummary}</ul>\n        <p>\n          <strong>Total Price: {this.props.price.toFixed(2)}</strong>\n        </p>\n        <p>Continue to Checkout?</p>\n        <Button btnType=\"danger\" clicked={this.props.purchaseCancelled}>\n          CANCEL\n        </Button>\n        <Button btnType=\"success\" clicked={this.props.purchaseContinued}>\n          CONTINUE\n        </Button>\n      </Aux>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import React from \"react\";\n\nimport \"./spinner.styles.scss\";\n\nconst Spinner = props => <div className=\"loader\">Loading...</div>;\n\nexport default Spinner;\n","import React from \"react\";\n\nimport Modal from \"../../components/ui/modal/modal.component\";\nimport Aux from \"../auxillary/auxillary.component\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends React.Component {\n    state = {\n      error: null\n    };\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          this.setState({ error: error });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <Aux>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\nexport default withErrorHandler;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://burger-builder-c0867.firebaseio.com/\"\n});\n\nexport default instance;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Aux from \"../../hoc/auxillary/auxillary.component\";\nimport Burger from \"../../components/burger/burger.component\";\nimport BuildControls from \"../../components/burger/build-controls/build-controls.component\";\nimport Modal from \"../../components/ui/modal/modal.component\";\nimport OrderSummary from \"../../components/order-summary/order-summary.component\";\nimport Spinner from \"../../components/ui/spinner/spinner.component\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport axios from \"../../axios-orders\";\nimport * as burgerBuilderActions from \"../../store/actions/index\";\n\nclass BurgerBuilder extends React.Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {...}\n  // }\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    return sum > 0;\n  }\n\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.history.push(\"/checkout\");\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n    let burger = this.props.error ? (\n      <p>Ingredients can't be loaded!</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            purchasable={this.updatePurchaseState(this.props.ings)}\n            ordered={this.purchaseHandler}\n            price={this.props.price}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          price={this.props.price}\n          purchaseCancelled={this.purchaseCancelHandler}\n          purchaseContinued={this.purchaseContinueHandler}\n        />\n      );\n    }\n    // {salad: true, meat: false, ...}\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice,\n    error: state.error\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName =>\n      dispatch(burgerBuilderActions.addIngredient(ingName)),\n    onIngredientRemoved: ingName =>\n      dispatch(burgerBuilderActions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","import * as actionTypes from \"./actionsTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const addIngredient = name => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const removeIngredient = name => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const fetchIngredientsFailed = () => {\n  return {\n    type: actionTypes.FETCH_INGREDIENTS_FAILED\n  };\n};\n\nexport const setIngredients = ingredients => {\n  return {\n    type: actionTypes.SET_INGREDIENTS,\n    ingredients: ingredients\n  };\n};\n\nexport const initIngredients = () => {\n  return dispatch => {\n    axios\n      .get(\"https://burger-builder-c0867.firebaseio.com/ingredients.json\")\n      .then(response => {\n        dispatch(setIngredients(response.data));\n      })\n      .catch(error => {\n        dispatch(fetchIngredientsFailed());\n      });\n  };\n};\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\n","import React from \"react\";\n\nimport \"./input.styles.scss\";\n\nconst Input = props => {\n  let inputElement = null;\n\n  const isFormValid = () => {\n    return props.invalid && props.shouldValidate && props.touched\n      ? \"invalid\"\n      : \"\";\n  };\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={`input-element ${isFormValid()}`}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={`input-element ${isFormValid()}`}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={`input-element ${isFormValid()}`}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className=\"input-element\"\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n  }\n\n  return (\n    <div className=\"input\">\n      <label className=\"label\">{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport axios from \"../../../axios-orders\";\nimport { connect } from \"react-redux\";\n\nimport Spinner from \"../../../components/ui/spinner/spinner.component\";\nimport Button from \"../../../components/ui/button/button.component\";\nimport Input from \"../../../components/ui/input/input.component\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport \"./contact-data.styles.scss\";\n\nclass ContactData extends React.Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIP Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Email\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            {\n              value: \"fastest\",\n              displayValue: \"Fastest\"\n            },\n            {\n              value: \"cheapest\",\n              displayValue: \"Cheapest\"\n            }\n          ]\n        },\n        value: \"fastest\",\n        validation: {},\n        valid: true\n      }\n    },\n    formIsValid: false\n  };\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  orderHandler = event => {\n    event.preventDefault();\n    console.log(this.props);\n    const formData = {};\n    for (let formElementId in this.state.orderForm) {\n      formData[formElementId] = this.state.orderForm[formElementId].value;\n    }\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price,\n      orderData: formData\n    };\n\n    this.props.onOrderBurger(order);\n  };\n\n  inputChangedHandler = (event, inputId) => {\n    const updatedOrderForm = {\n      ...this.state.orderForm\n    };\n    const updatedFormElement = {\n      ...updatedOrderForm[inputId]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.touched = true;\n    updatedOrderForm[inputId] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputId in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputId].valid && formIsValid;\n    }\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            invalid={!formElement.config.valid}\n            shouldValidate={formElement.config.validation}\n            touched={formElement.config.touched}\n            changed={event => this.inputChangedHandler(event, formElement.id)}\n          />\n        ))}\n        <Button btnType=\"success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className=\"contact-data\">\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderData: orderData => dispatch(actions.purchaseBurger(orderData))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import * as actionTypes from \"./actionsTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\n\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\n\nexport const purchaseBurger = orderData => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios\n      .post(\"/orders.json\", orderData)\n      .then(response => {\n        console.log(response.data);\n        dispatch(purchaseBurgerSuccess(response.data, orderData));\n      })\n      .catch(error => {\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\n","import React from \"react\";\n\nimport Burger from \"../../burger/burger.component\";\nimport Button from \"../../ui/button/button.component\";\n\nimport \"./checkout-summary.styles.scss\";\n\nconst CheckoutSummary = props => {\n  return (\n    <div className=\"checkout-summary\">\n      <h1>We hope it tastes well!</h1>\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Burger ingredients={props.ingredients} />\n        <Button btnType=\"danger\" clicked={props.CheckoutCancelled}>\n          CANCEL\n        </Button>\n        <Button btnType=\"success\" clicked={props.CheckoutContinue}>\n          CONTINUE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport ContactData from \"./contact-data/contact-data.component\";\nimport CheckoutSummary from \"../../components/order/checkout-summary/checkout-summary.component\";\n\nclass Checkout extends React.Component {\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n  checkoutContinueHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n    if (this.props.ings) {\n      summary = (\n        <React.Fragment>\n          <CheckoutSummary\n            ingredients={this.props.ings}\n            CheckoutCancelled={this.checkoutCancelledHandler}\n            CheckoutContinue={this.checkoutContinueHandler}\n          />\n          <Route\n            path={`${this.props.match.path}/contact-data`}\n            component={ContactData}\n          />\n        </React.Fragment>\n      );\n    }\n    return summary;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\n\nimport \"./order.styles.scss\";\n\nconst Order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span\n        key={ig.name}\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        }}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className=\"order\">\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default Order;\n","import React from \"react\";\n\nimport Order from \"../order.component\";\nimport axios from \"../../../axios-orders\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\n\nimport \"./orders.styles.scss\";\n\nclass Orders extends React.Component {\n  state = {\n    orders: [],\n    loading: true\n  };\n  componentDidMount() {\n    axios\n      .get(\"/orders.json\")\n      .then(res => {\n        const fetchOrders = [];\n        for (let key in res.data) {\n          fetchOrders.push({ ...res.data[key], id: key });\n        }\n        console.log(res.data);\n        this.setState({ loading: true, orders: fetchOrders });\n      })\n      .catch(err => {\n        this.setState({ loading: true });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.orders.map(order => (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withErrorHandler(Orders, axios);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Layout from \"./hoc/layout/layout.component\";\nimport BurgerBuilder from \"./containers/burger-builder/burger-builder.component\";\nimport Checkout from \"./containers/checkout/checkout.component\";\nimport Orders from \"./components/order/orders/orders.component\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionsTypes\";\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n    case actionTypes.SET_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        error: false\n      };\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return {\n        ...state,\n        error: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder.reducer.js\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  burgerBuilderReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/BurgerBuilder\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}